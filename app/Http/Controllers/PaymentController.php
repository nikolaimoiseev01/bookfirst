<?php

namespace App\Http\Controllers;

use App\Enums\PaymentStatusEnum;
use App\Models\Collection;
use App\Models\own_book;
use App\Models\Participation;
use App\Models\Transaction;
use App\Models\User;
use App\Notifications\EmailNotification;
use App\Notifications\new_participation;
use App\Notifications\TelegramNotification;
use App\Service\PaymentService;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Notification;
use YooKassa\Model\Notification\NotificationSucceeded;
use YooKassa\Model\Notification\NotificationWaitingForCapture;
use YooKassa\Model\NotificationEventType;

class PaymentController extends Controller
{
    public $url_redirect;

    public function create_part_payment($participation_id, $amount, PaymentService $service)
    {

        $description = "–û–ø–ª–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è –≤ '" . Collection::where('id', Participation::where('id', $participation_id)->value('collection_id'))->value('title') . "'";
        $url_redirect = url()->previous();

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        $transaction = new Transaction();
        $transaction->user_id = Auth::user()->id;
        $transaction->amount = $amount;
        $transaction->participation_id = $participation_id;
        $transaction->description = $description;
        $transaction->save();

        if ($transaction) {
            $link = $service->createPayment($amount, $description, $url_redirect, [
                'transaction_id' => $transaction->id,
                'participation_id' => $participation_id,
                'own_book_id' => null,
                'url_redirect' => $url_redirect
            ]);

            if (isset($link)) {
                return redirect()->away($link);
            }
        }
    }

    public function create_own_book_payment($own_book_id, $payment_type, $amount, PaymentService $service)
    {

        $own_book = own_book::where('id', $own_book_id)->first();

        if ($payment_type === 'Without_Print') {
            $own_book_payment_text = '(–±–µ–∑ –ø–µ—á–∞—Ç–∏)';
        } else {
            $own_book_payment_text = "–ø–µ—á–∞—Ç–∏";
        };


        $description = "–û–ø–ª–∞—Ç–∞ " . $own_book_payment_text . "–∫–Ω–∏–≥–∏ '" . $own_book['title'] . "'";
        $url_redirect = url()->previous();

        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        $transaction = new Transaction();
        $transaction->user_id = Auth::user()->id;
        $transaction->amount = $amount;
        $transaction->own_book_id = $own_book['id'];
        $transaction->own_book_payment_type = $payment_type;
        $transaction->description = $description;
        $transaction->save();

        if ($transaction) {
            $link = $service->createPayment($amount, $description, $url_redirect, [
                'transaction_id' => $transaction->id,
                'participation_id' => null,
                'own_book_id' => $own_book['id'],
                'own_book_payment_type' => $payment_type,
                'url_redirect' => $url_redirect
            ]);

            if (isset($link)) {
                return redirect()->away($link);
            }
        }

    }


    public function callback(Request $request, PaymentService $service)
    {

//        Log::info('//////////////////////////  CALBACK STARTED //////////////////////////');

        // –ü–æ–ª—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ POST-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ÆKassa
        $source = file_get_contents('php://input');
        $requestBody = json_decode($source, true);
        $notification = $requestBody['object'];

        if (isset($notification['status']) && $notification['status'] === 'succeeded') { // –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
            if ((bool)$notification['paid'] === true) { // –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ —É—Å–ø—à–µ–Ω–∞
                $metadata = $notification['metadata'];
                if (isset($metadata['transaction_id'])) { // –ï—Å–ª–∏ –µ—Å—Ç—å transaction_id

                    // –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    $transactionId = (int)$metadata['transaction_id'];
                    // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–º–µ—é—â–µ–π—Å—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                    Transaction::where('id', $transactionId)
                        ->update(array('status' => PaymentStatusEnum::CONFIRMED));
                    // -----------------------------------------------------------------

                    // –£—á–∞—Å—Ç–Ω–∏–∫ –æ–ø–ª–∞—Ç–∏–ª —Å–±–æ—Ä–Ω–∏–∫ -------------------------------------------------------------------------------------------------
                    if ((int)$metadata['participation_id'] > 0) { // –≠—Ç–æ –æ–ø–ª–∞—Ç–∞ –∑–∞ —Å–±–æ—Ä–Ω–∏–∫

                        $Participation = Participation::where('id', (int)$metadata['participation_id'])->first();
                        $Collection = Collection::where('id', $Participation['collection_id'])->first();
                        $user = User::where('id', $Participation['user_id'])->first();

                        if ($Participation['paid_at'] === null) { // –≠—Ç–æ –ù–û–í–ê–Ø –æ–ø–ª–∞—Ç–∞ –∑–∞ —Å–±–æ—Ä–Ω–∏–∫

                            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å—Ç—Ä–æ–∫—É —É—á–∞—Å—Ç–∏—è
                            Participation::where('id', (int)$metadata['participation_id'])
                                ->update(array(
                                    'paid_at' => Carbon::now('Europe/Moscow')->toDateTime(),
                                    'pat_status_id' => 3
                                ));

                            // –ü–æ—Å—ã–ª–∞–µ–º Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            $user->notify(new EmailNotification(
                                '–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–∞!',
                                $user['name'],
                                "–û—Ç–ª–∏—á–Ω–æ, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞—è–≤–∫—É –≤ —Å–±–æ—Ä–∏–∫–µ: '" . $Collection['title'] .
                                "'. –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–µ—Ç—Å—è –∂–¥–∞—Ç—å –∏–∑–¥–∞–Ω–∏—è! –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —ç—Ç–æ–º—É —Å–±–æ—Ä–Ω–∏–∫—É –±—É–¥–µ—Ç –ø–æ —Å—Å—ã–ª–∫–µ:",
                                "–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–±–æ—Ä–Ω–∏–∫–∞",
                                $metadata['url_redirect']));

                            // –ü–æ—Å—ã–ª–∞–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–º
                            Notification::route('telegram', '-506622812')
                                ->notify(new TelegramNotification('üí∏ –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –ø–æ —Å–±–æ—Ä–∏–Ω–∫—É! üí∏', '–ê–≤—Ç–æ—Ä: ' . $Participation['name'] . " " . $Participation['surname'] .
                                    "\n" . "–°–±–æ—Ä–Ω–∏–∫: " . $Collection['title'] .
                                    "\n" . "–°—É–º–º–∞: " . $Participation['total_price'] . " —Ä—É–±.",
                                    "–ï–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—á–∞—Å—Ç–∏—è",
                                    route('user_participation', $Participation['id'])));

                        }
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------


                    // –ê–≤—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏–ª –≤—Å–µ –∫—Ä–æ–º–µ –ø–µ—á–∞—Ç–∏ -------------------------------------------------------------------------------------------------
                    if ((int)$metadata['own_book_id'] > 0 && (string)$metadata['own_book_payment_type'] == 'Without_Print') { // –≠—Ç–æ –æ–ø–ª–∞—Ç–∞ –∑–∞ –∫–Ω–∏–≥—É (–ë–ï–ó –ü–ï–ß–ê–¢–ò)
                        $own_book = own_book::where('id', (int)$metadata['own_book_id'])->first();
                        $user = User::where('id', $own_book['user_id'])->first();

                        if ($own_book['paid_at_without_print'] === null) {  // –≠—Ç–æ –ù–û–í–ê–Ø –æ–ø–ª–∞—Ç–∞
                            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å—Ç—Ä–æ–∫—É —É—á–∞—Å—Ç–∏—è
                            own_book::where('id', (int)$metadata['own_book_id'])
                                ->update(array(
                                    'paid_at_without_print' => Carbon::now('Europe/Moscow')->toDateTime(),
                                    'own_book_status_id' => 3
                                ));

                            // –ü–æ—Å—ã–ª–∞–µ–º Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            $user->notify(new EmailNotification(
                                '–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–µ–Ω–∞!',
                                $user['name'],
                                "–û—Ç–ª–∏—á–Ω–æ, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ä–∞–±–æ—Ç—É —Å –º–∞–∫–µ—Ç–∞–º–∏ –ø–æ –∫–Ω–∏–≥–µ: '" . $own_book['title'] .
                                "'. –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –í—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–µ–∂–∏–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–¥–∞–Ω–∏—è:",
                                "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑–¥–∞–Ω–∏—è",
                                $metadata['url_redirect']));

                            // –ü–æ—Å—ã–ª–∞–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–º
                            Notification::route('telegram', '-506622812')
                                ->notify(new TelegramNotification('üí∏ –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –ø–æ –∫–Ω–∏–≥–µ! üí∏', '–ê–≤—Ç–æ—Ä: ' . $own_book['author'] . "(—é–∑–µ—Ä: " . $user['name'] . " " . $user['surname'] .
                                    "\n" . "–ö–Ω–∏–≥–∞: " . $own_book['title'] .
                                    "\n" . "–°—É–º–º–∞: " . ($own_book['total_price'] - $own_book['print_price']) . " —Ä—É–±. (–ø–µ—á–∞—Ç—å —É –Ω–µ–≥–æ –Ω–∞ " . $own_book['print_price'] . " —Ä—É–±.",
                                    "–ï–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑–¥–∞–Ω–∏—è",
                                    route('own_books_page', $own_book['id'])));
                        }
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------


                    // –ê–≤—Ç–æ—Ä –æ–ø–ª–∞—Ç–∏–ª –ø–µ—á–∞—Ç—å –∫–Ω–∏–≥–∏ -------------------------------------------------------------------------------------------------
                    if ((int)$metadata['own_book_id'] > 0 && (string)$metadata['own_book_payment_type'] == 'Print_only') { // –≠—Ç–æ –æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–µ—á–∞—Ç—å –∫–Ω–∏–≥–∏


                        $own_book = own_book::where('id', (int)$metadata['own_book_id'])->first();
                        $user = User::where('id', $own_book['user_id'])->first();

                        if ($own_book['paid_at_print_only'] === null) {  // –≠—Ç–æ –ù–û–í–ê–Ø –æ–ø–ª–∞—Ç–∞
                            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã –Ω–∞ —Å—Ç—Ä–æ–∫—É —É—á–∞—Å—Ç–∏—è
                            own_book::where('id', (int)$metadata['own_book_id'])
                                ->update(array(
                                    'paid_at_print_only' => Carbon::now('Europe/Moscow')->toDateTime(),
                                    'own_book_status_id' => 5
                                ));

                            // –ü–æ—Å—ã–ª–∞–µ–º Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                            $user->notify(new EmailNotification(
                                '–û–ø–ª–∞—Ç–∞ –æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!',
                                $user['name'],
                                "–û—Ç–ª–∏—á–Ω–æ, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø–µ—á–∞—Ç—å –∫–Ω–∏–≥–∏: '" . $own_book['title'] .
                                "'. –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –í—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Å–µ–∂–∏–≤–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–¥–∞–Ω–∏—è:",
                                "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑–¥–∞–Ω–∏—è",
                                $metadata['url_redirect']));

                            // –ü–æ—Å—ã–ª–∞–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–º
                            Notification::route('telegram', '-506622812')
                                ->notify(new TelegramNotification('üí∏ –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –ø–æ –ø–µ—á–∞—Ç–∏ –∫–Ω–∏–≥–∏! üí∏', '–ê–≤—Ç–æ—Ä: ' . $own_book['author'] . "(—é–∑–µ—Ä: " . $user['name'] . " " . $user['surname'] .
                                    "\n" . "–ö–Ω–∏–≥–∞: " . $own_book['title'] .
                                    "\n" . "–°—É–º–º–∞: " . ($own_book['print_price']) . " —Ä—É–±.",
                                    "–ï–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑–¥–∞–Ω–∏—è",
                                    route('own_books_page', $own_book['id'])));
                        }
                    }
                    // --------------------------------------------------------------------------------------------------------------------------------
                }
            }
        }

//        Log::info('//////////////////////////  CALBACK ENDED //////////////////////////');
    }
}
