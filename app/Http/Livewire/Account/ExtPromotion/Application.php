<?php

namespace App\Http\Livewire\Account\ExtPromotion;

use App\Models\Chat;
use App\Models\ext_promotion;
use App\Models\promocode;
use App\Notifications\TelegramNotification;
use App\Service\ExtPromotionOutputsService;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Notification;
use Livewire\Component;

class Application extends Component
{
    public $error_texts = [];
    public $error_fields = [];

    public $flg_affirmed = false;
    public $login;
    public $password;
    public $site = 'stihi';
    public $days = 5;
    public $new_ext_promotion;

    private $calc_result;

    public $show_promo_input;
    public $promocode_input;
    public $promocode = null;

    protected $listeners = ['save_application'];

    public function render(ExtPromotionOutputsService $calc_outs)
    {

        $this->calc_result = $calc_outs->calculate($this->site, $this->days, $this->promocode['discount'] ?? 0);

        $this->price_total = $this->calc_result['price_total'];

        return view('livewire.account.ext-promotion.application');
    }


    public function check_promo()
    {
        $found_promo = promocode::where('promocode', $this->promocode_input)->first();

        if ($found_promo ?? null) {
            $this->promocode = $found_promo;
            $text = '–ü—Ä–∏–º–µ–Ω–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥ ' . $this->promocode['promocode'] . '. –£—á—Ç–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ –≤ ' . $this->promocode['discount'] . '%!';
            $this->dispatchBrowserEvent('swal:modal', [
                'type' => 'success',
                'title' => '–û—Ç–ª–∏—á–Ω–æ!',
                'text' => $text,
            ]);
            $this->show_promo_input = false;
        } else {
            $this->dispatchBrowserEvent('swal:modal', [
                'type' => 'error',
                'title' => '–£–ø—Å!',
                'text' => '–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–∏—Å—Ç–µ–º–µ',
            ]);
        }
    }

    public function check_app()
    {
        $has_promos = ext_promotion::where('user_id', Auth::user()->id)
            ->where('site', $this->site)
            ->where('ext_promotion_status_id', '<', 9)
            ->get();

        $this->error_texts = [];
        $this->error_fields = [];

        if (count($has_promos ?? null) > 0) {
            array_push($this->error_texts, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –Ω–∞ —ç—Ç–æ–º —Å–∞–π—Ç–µ!');
        }

        if (!$this->flg_affirmed ?? null) {
            array_push($this->error_texts, '–û—Ç–º–µ—Ç—å—Ç–µ –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏!');
        }

        if ($this->flg_affirmed && (!$this->login ?? null)) {
            array_push($this->error_fields, 'login');
            array_push($this->error_texts, '–õ–æ–≥–∏–Ω –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω!');
        }
        if ($this->flg_affirmed && (!$this->password ?? null)) {
            array_push($this->error_fields, 'password');
            array_push($this->error_texts, '–ü–∞—Ä–æ–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω!');
        }

        if (!empty($this->error_texts)) {
            $this->dispatchBrowserEvent('swal:modal', [
                'type' => 'error',
                'title' => '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!',
                'text' => implode("<br>", $this->error_texts),
            ]);
            return false;
        } else {
            return true;
        }
    }

    public function confirm_save()
    {
        if ($this->check_app()) {

            $html = "<div style='display: flex; flex-direction: column; gap: 10px;'>
                <p><b>–°–∞–π—Ç –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è:</b> {$this->site} </p>
                <p>–î–∞–Ω–Ω—ã–µ, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –≤–æ–π—Ç–∏ –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç <b>–Ω–∞ —Å–∞–π—Ç–µ $this->site</b>: <br><b>–õ–æ–≥–∏–Ω:</b> {$this->login}; <b>–ü–∞—Ä–æ–ª—å: {$this->password}</b>.
                <p><b>–î–Ω–µ–π –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è:</b> {$this->days}</p>
                <p><b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> {$this->price_total} —Ä—É–±.</p>
                </div>";

            $this->dispatchBrowserEvent('swal:confirm', [
                'title' => '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—è–≤–∫—É: ',
                'html' => $html,
                'onconfirm' => 'save_application'
            ]);
        }
    }


    public function save_application(ExtPromotionOutputsService $calc_outs)
    {

        $this->calc_result = $calc_outs->calculate($this->site, $this->days, $this->promocode['discount'] ?? 0);

        DB::transaction(function () { // –ß—Ç–æ–±—ã –Ω–µ –∑–∞–ø–∏—Å–∞—Ç—å –Ω–µ–Ω—É–∂–Ω–æ–≥–æ

            $this->new_ext_promotion = ext_promotion::create([
                'user_id' => Auth::user()->id,
                'ext_promotion_status_id' => 1,
                'login' => $this->login,
                'password' => $this->password,
                'site' => $this->site,
                'days' => $this->days,
                'price_total' => $this->price_total,
                'price_executor' => $this->calc_result['price_executor'],
                'price_our' => $this->calc_result['price_our'],
                'promocode_id' => $this->promocode['id'] ?? null
            ]);

            // –°–æ–∑–¥–∞–µ–º –ß–ê–¢
            $new_chat = new Chat();
            $new_chat->user_created = Auth::user()->id;
            $new_chat->user_to = 2;
            $new_chat->flg_admin_chat = 1;
            $new_chat->title = '–õ–∏—á–Ω—ã–π —á–∞—Ç –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é –Ω–∞ —Å–∞–π—Ç–µ: ' . $this->site;
            $new_chat->chat_status_id = 9;
            $new_chat->ext_promotion_id = $this->new_ext_promotion['id'];
            $new_chat->save();

            $this->new_ext_promotion->update([
                'chat_id' => $new_chat->id
            ]);
        });


        $user = Auth::user();

        $promocode_info = $this->promocode['id'] ?? null ? "*–ü—Ä–æ–º–æ–∫–æ–¥*: " . $this->new_ext_promotion->promocode['promocode'] . "\n" : "";

        Notification::route('telegram', ENV('APP_DEBUG') ? "-4176126016" : '-4120321987')
            ->notify(new TelegramNotification('üí• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ!* üí•',
                "*–ê–≤—Ç–æ—Ä*: {$user['surname']} {$user['name']}\n" .
                "*–õ–æ–≥–∏–Ω*: {$this->login}\n" .
                "*–°–∞–π—Ç*: {$this->site}\n" .
                $promocode_info .
                "*–î–Ω–µ–π*: {$this->days}\n" .
                "*–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å*: {$this->price_total}",
                null,
                null));

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        session()->flash('show_modal', 'yes');
        session()->flash('alert_type', 'success');
        session()->flash('alert_title', '–û—Ç–ª–∏—á–Ω–æ!');
        session()->flash('alert_text', '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.');
        return redirect(route('index_ext_promotion', $this->new_ext_promotion->id));
    }

}
